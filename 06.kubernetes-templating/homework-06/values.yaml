# Default values for homework-06.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.




namespace:
  name: homework
  labels: homework





PersistentVolumeClaim:
  name: pvc001-web
  accessModes: ReadWriteOnce
  storage: 50Mi
  storageClassName: "second-nfs-client"



SaMonitoringAccount:
  name: monitoring
  secret: monitoring-sa-token
  role:  role-monitoring



Deployment:
  name: web
  labels:
    key: "app.kubernetes.io/name"
    value: web
  replicaCount: 3
  strategy:
    type: RollingUpdate
    maxUnavailable: 1
    maxSurge: 1
  selector:
    key: "app.kubernetes.io/name"
    value: web
  nodeSelector:
    key: "kubernetes.io/hostname"
    value: k8s-w001
  tolerations:
    key: homework
    operator: Exists
    effect: NoExecute
  initContainers:
    names:
      value1: init
      value2: token-init
    volumeMounts:
      name1: homework
      path1: "/init"
    image:
      repository: "rybnovn/alpine"
      tag: ":1.1"
      pullPolicy: IfNotPresent
  Containers:
    names:
      value: web
    volumeMounts:
      name1: homework
      path1: "/homework"
      name2: default
      path2: "/etc/nginx/conf.d/"
      name3: config-volume
      path3: "/homework/conf/"
    image:
      repository: "rybnovn/nginx"
      tag: ":1.2"
      pullPolicy: IfNotPresent      
    readinessProbe:
      enabled: false
      httpGet:
        path: /index.html
        port: 8000 
      initialDelaySeconds: 5
      periodSeconds: 5
    ports:
      containerPort: 8000
      name: http
    lifecycle:
      enabled: false
  
  
  
  
Service:
  port: 8000
  targetPort: 8000    
  type: ClusterIP  
  
  
  



ingress:
  enabled: true
  className: ""
  #annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: homework.otus
      paths:
        - path:
            - "/index.html"
            - "/homepage"
            - "/conf/file"
            - "/metrics.html" 
          pathType: Prefix
  serviceName:
    value1: web
  hostnames:
    value1: homework.otus
  SubPaths:
    value1: "/index.html"
    value2: "/homepage"
    value3: "/conf/file"
    value4: "/metrics.html" 
  servicePorts:
    value1: 8000  
  serviceName:
    value1: web
    
    
  #tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local



















  
# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
